{
  "description": "Это основа всего приложения. Сетка позволяет правильно расположить все элементы на экране любого устройства.",
  "subTitle1": "Сущности",
  "text1": "Grid содержит две сущности:",
  "text2": "Контейнер - определяет систему столбцов, построенную на CSS Grid, которая во много раз удобнее и проще в использовании, чем CSS FlexBox.",
  "text3": "Элемент - столбец в системе Grid.",
  "text4": "В стандартных ситуациях вам следует придерживаться как можно меньшего числа `<Grid container>`. Одного контейнера достаточно, чтобы создать стандартный макет страницы и закрыть все потребности.",
  "examples": {
    "title": "Примеры",
    "default": {
      "title": "По умолчанию",
      "description": ""
    },
    "offset": {
      "title": "Отступы",
      "description": "Offset - позволяет задавать элементам в сетке отступы. Отступы рассчитываются с первой колонки левой стороны. В случае столкновения элементов, последний будет перeмещен на новую строку."
    },
    "responsive": {
      "title": "Отзывчивость",
      "description": "Параметр `col` может быть расширен для лучшей адаптивности. Для этого необходимо передать объект, содержащий имя брейкпоинта из темы и желаемое количество занимаемых элементом колонок. Например:  xs: 24, xl: 12, xxl: 16"
    },
    "tag": {
      "title": "Tag",
      "description": "Часто для лучшей семантики необходимо использовать семантические теги HTML. Специально для этого добавлен параметр `Tag`. Это позволяет вам как разработчику переопределить корневой тег компонента на тот который по вашему мнению подходит лучше."
    },
    "style": {
      "title": "Style",
      "description": "Параметр `style` будет работать так же как и при стандартном использовании, но при этом конвертировать все передаваемые стили в отдельный уникальный класс. Это сделанно для сохранения чистоты в коде."
    }
  }
}